version: '3'
services:

#  jaeger-all-in-one:
#    image: jaegertracing/all-in-one:latest
#    restart: always
#    ports:
#      - "16686:16686"
#      - "14268"
#      - "14250"
#
#  # Zipkin
#  zipkin-all-in-one:
#    image: openzipkin/zipkin:latest
#    restart: always
#    ports:
#      - "9411:9411"


#  otel-collector:
#    image: otel/opentelemetry-collector-contrib:0.82.0
#    restart: always
#    command:
#      - --config=/etc/otelcol-contrib/otel-collector.yml
#    volumes:
#      - ./otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
#    ports:
#      - "1888:1888" # pprof extension
#      - "8888:8888" # Prometheus metrics exposed by the collector
#      - "8889:8889" # Prometheus exporter metrics
#      - "13133:13133" # health_check extension
#      - "4317:4317" # OTLP gRPC receiver
#      - "4318:4318" # OTLP http receiver
#      - "55679:55679" # zpages extension
#    depends_on:
#      - jaeger-all-in-one
#      - zipkin-all-in-one

#  prometheus:
#    container_name: prometheus
#    image: prom/prometheus
#    restart: always
#    command:
#      - --config.file=/etc/prometheus/prometheus.yml
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#
#  grafana:
#    container_name: grafana
#    image: grafana/grafana
#    #    volumes:
#    #      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
#    ports:
#      - "3000:3000"

  postgresql:
    container_name: temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:${POSTGRESQL_VERSION}
    expose:
      - 5432
    volumes:
      - /var/lib/postgresql/data


  temporal-server:
    container_name: temporal
    depends_on:
      - postgresql
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - ENABLE_ES=false
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    ports:
      - 7233:7233

  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:${TEMPORAL_VERSION}
    stdin_open: true
    tty: true
  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    ports:
      - "8000:8000"